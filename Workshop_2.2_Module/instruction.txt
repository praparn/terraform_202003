This workshop for operate with module on azure
========================================  Module Operate  ===============================================================
1. Start workshop "module variable" by command:
    cd ~/terraform_202003/Workshop_2.2_Module/01_Module/
    sed -i -e 's/X/<your lab id>/g' ~/terraform_202003/Workshop_2.2_Module/01_Module/terraform.tfvars
    more 00_provider.tf
    more 01_resource_group.tf
    more 02_network_module.tf
    more 03_compute_module.tf
    more terraformlab.pub
    more variables.tf
    more terraform.tfvars

2. Download and Verify module's resource by command:
    terraform init
    ls -R .terraform/

3. Login az cli for service priciple by command:
    3.1 Input command: "az login"
    ---------------------------------------------------------------------------
    Example Output:
    ---------------------------------------------------------------------------
    To sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code HUAF6ANNY to authenticate.
    ---------------------------------------------------------------------------

    3.2 Open browser for url: "https://microsoft.com/devicelogin" and input code

    3.3 Sign In with user below:
    Email: Training_Terraform_Student@eva10409hotmail.onmicrosoft.com
    Username: Training_Terraform_Student
    Password: Tr@1n1nG2020

    3.4 You will get information from login as example below:
    ---------------------------------------------------------------------------
    Example Output:
    ---------------------------------------------------------------------------
[
  {
    "cloudName": "AzureCloud",
    "id": "017499d3-a685-4954-b727-273a4a7f939f",
    "isDefault": true,
    "name": "Azure subscription 1",
    "state": "Enabled",
    "tenantId": "94740460-e015-46f0-b75b-1948465bf6a1",
    "user": {
      "name": "Training_Terraform_Student@eva10409hotmail.onmicrosoft.com",
      "type": "user"
    }
  }
]

4. Start process of terraform operation:
    terraform fmt -check
    terraform validate
    terraform apply -auto-approve -parallelism=5        (Wait 5 Min)

5. Check output detail of virtual machine instance by command: terraform output  (* Record instance id, ip address etc)
---------------------------------------------------------------------------
    Example:
    Outputs:
linux_vm_id = [
  "/subscriptions/017499d3-a685-4954-b727-273a4a7f939f/resourceGroups/labresourcegroup-student-22/providers/Microsoft.Compute/virtualMachines/labserver-student-220",
]
linux_vm_public_name = [
  "labserver202003-thailand-student-22.southeastasia.cloudapp.azure.com",
]
---------------------------------------------------------------------------

6. Check status of EC2 and detail by command: 
    more terraform.tfvars                ==> Record: rscgrp_name
    az vm list -g <rscgrp_name> -d --output table
    ---------------------------------------------------------------------------
    Example Output:
    ---------------------------------------------------------------------------

Name                   ResourceGroup                PowerState    PublicIps     Fqdns                                                                   Location       Zones
---------------------  ---------------------------  ------------  ------------  ----------------------------------------------------------------------  -------------  -------
labserver-student-220  labresourcegroup-student-22  VM running    52.187.12.41  labserver20200301-thailand-student-22.southeastasia.cloudapp.azure.com  southeastasia
    ---------------------------------------------------------------------------

6. (Local Machine) (Wait 3 -5 min) Test access to new machine by ssh connection to <public ip>

    ---------------------------------------------------------------------------
    Example MAC or WSL2:
    ---------------------------------------------------------------------------
    ssh -i terraform ubuntu@<public ip>
    ---------------------------------------------------------------------------
    ---------------------------------------------------------------------------
    Example Windows:
    ---------------------------------------------------------------------------
    putty to <public ip>
    ---------------------------------------------------------------------------

7. (Local Machine) Test run command: docker run hello-world

8. Destroy EC2/EBS from this script by command: 
    terraform destroy -auto-approve

9. Check status of EC2 and detail by command: az vm list -g <resource group name> -d --output table
    ---------------------------------------------------------------------------
    Example Output:
    ---------------------------------------------------------------------------

Name                   ResourceGroup                PowerState    PublicIps     Fqdns                                                                   Location       Zones
---------------------  ---------------------------  ------------  ------------  ----------------------------------------------------------------------  -------------  -------
labserver-student-220  labresourcegroup-student-22  VM running    52.187.12.41  labserver20200301-thailand-student-22.southeastasia.cloudapp.azure.com  southeastasia
    --------------------------------------------------------------------------